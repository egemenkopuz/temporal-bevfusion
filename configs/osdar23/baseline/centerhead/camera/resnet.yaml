point_cloud_range: [-6.0, -128.0, -3.0, 250.0, 128.0, 13.0]
post_center_range: [-11.0, -132.0, -5.0, 255.0, 132.0, 15.0]

image_size: [256, 704]
voxel_size: [0.16, 0.16, 0.4]
grid_size: [1600, 1600, 1]

xbound: ${[point_cloud_range[0], point_cloud_range[3], voxel_size[0] * 4]}
ybound: ${[point_cloud_range[1], point_cloud_range[4], voxel_size[1] * 4]}
zbound: ${[point_cloud_range[2], point_cloud_range[5], point_cloud_range[5] - point_cloud_range[2]]}
dbound: [1.0, 120.0, 1.0]

out_size_factor: 8
score_threshold: 0.1
nms_threshold: 0.2

samples_per_gpu: 4
workers_per_gpu: 6

max_epochs: 20

optimizer:
  type: AdamW
  lr: 1.0e-4
  weight_decay: 0.01
  paramwise_cfg:
    custom_keys:
      absolute_pos_embed:
        decay_mult: 0
      relative_position_bias_table:
        decay_mult: 0
      encoders.camera.backbone:
        lr_mult: 0.1

momentum_config:
  policy: cyclic
  cyclic_times: 1
  step_ratio_up: 0.2

lr_config:
  cyclic_times: 1
  policy: cyclic
  step_ratio_up: 0.4
  target_ratio: 5.0

optimizer_config:
  grad_clip:
    max_norm: 25
    norm_type: 2

augment2d:
  resize: [[0.38, 0.55], [0.48, 0.48]]
  bot_pct_lim: [[0.6, 0.7], [0.65, 0.65]]
  rotate: [-5.4, 5.4]
  gridmask:
    prob: 0.1
    fixed_prob: true
    max_epoch: 17

augment3d:
  scale: [0.95, 1.05]
  rotate: [-0.3925, 0.3925]
  translate: 0

model:
  encoders:
    camera:
      backbone:
        type: ResNet
        depth: 50
        num_stages: 4
        out_indices: [0, 1, 2, 3]
        norm_cfg:
          type: BN2d
          requires_grad: true
        norm_eval: false
        init_cfg:
          type: Pretrained
          checkpoint: torchvision://resnet50
      neck:
        type: SECONDFPN
        in_channels: [256, 512, 1024, 2048]
        out_channels: [128, 128, 128, 128]
        upsample_strides: [0.25, 0.5, 1, 2]
      vtransform:
        type: LSSTransform
        image_size: ${image_size}
        in_channels: 512
        out_channels: 80
        feature_size: ${[image_size[0] // 16, image_size[1] // 16]}
        xbound: ${xbound}
        ybound: ${ybound}
        zbound: ${zbound}
        dbound: ${dbound}
        downsample: 1
  decoder:
    backbone:
      type: GeneralizedResNet
      in_channels: 64
      blocks:
        - [2, 128, 2]
        - [2, 256, 2]
        - [2, 512, 1]
    neck:
      type: LSSFPN
      in_indices: [-1, 0]
      in_channels: [512, 128]
      out_channels: 256
      scale_factor: 2
